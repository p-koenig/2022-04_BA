[Integer]

# int: max degree of polynomials
d = 3
# int: number of variables in polynomials
n = 4

# int: number of data points to calculate the function (polynomial) values for, determines the lambda-nets' dataset size
lambda_dataset_size = 100 
# int: number of functions (polynomials) generated , specifies the interpretation-net's dataset size
interpretation_dataset_size = 5000

# int: number of cpu cores to use for parallelization
n_jobs = 10

[Float]

# float: relative amount of coefficients to set to 0, interpreted as percent
sparsity = 0.0 

# Possible values for coefficients
# float: max coefficient
a_max = 10
# float: min coefficient
a_min = -10
# float: discretization of coefficient range, controls the number of possible coefficient values
a_step = 0.1

# Possible values for input variables
# float: max variable value
x_max = 1
# float: min variable value
x_min = -1
# float: discretization of variable range, controls the number of possible variable input values
x_step = 0.01

[Boolean]

# boolean: whether each polynomial and thus lambda-net is trained on the same input datapoints (x) or not
# MUST BE TRUE --> DO NOT CHANGE
same_training_all_polynomials = True